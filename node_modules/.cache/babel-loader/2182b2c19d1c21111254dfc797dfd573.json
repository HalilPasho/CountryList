{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/halil/Desktop/countries/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/halil/Desktop/countries/src/countriesList/countriesList.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n {\\n  country{\\n    name\\n    native\\n    emoji\\n    currency\\n    languages {\\n      code\\n      name\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { Query } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nconst GET_COUNTRIES = gql(_templateObject());\n\nclass CountrySelect extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      country: \"PL\" // set the selected country to the new input value\n\n    };\n\n    this.onCountryChange = event => {\n      this.setState({\n        country: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Query, {\n      query: GET_COUNTRIES,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Loading...\");\n      if (error) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, error.message);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        value: this.state.country,\n        onChange: this.onCountryChange,\n        style: {\n          marginTop: \"30px\",\n          height: \"50px\",\n          fontSize: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, data.countries.map(({\n        code,\n        name,\n        emoji\n      }) => React.createElement(\"option\", {\n        key: code,\n        value: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, emoji, \" \", name))), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Country Selected: \", this.state.country));\n    });\n  }\n\n}\n\nexport default CountrySelect;","map":{"version":3,"sources":["/home/halil/Desktop/countries/src/countriesList/countriesList.js"],"names":["React","Query","gql","GET_COUNTRIES","CountrySelect","Component","state","country","onCountryChange","event","setState","target","value","render","loading","error","data","message","marginTop","height","fontSize","countries","map","code","name","emoji"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,cAApB;AAEA,MAAMC,aAAa,GAAGD,GAAH,mBAAnB;;AAeA,MAAME,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACPC,MAAAA,OAAO,EAAE,IADF,CAIR;;AAJQ,KADmC;;AAAA,SAM3CC,eAN2C,GAMzBC,KAAK,IAAI;AAC1B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAxB,OAAd;AACA,KAR0C;AAAA;;AAU3CC,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEV,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,CAAC;AAAEW,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC9B,UAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,UAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,KAAK,CAACE,OAAV,CAAP;AACX,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AACC,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,OADnB;AAEC,QAAA,QAAQ,EAAE,KAAKC,eAFhB;AAGC,QAAA,KAAK,EAAE;AAAEU,UAAAA,SAAS,EAAE,MAAb;AAAqBC,UAAAA,MAAM,EAAE,MAA7B;AAAqCC,UAAAA,QAAQ,EAAE;AAA/C,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKEJ,IAAI,CAACK,SAAL,CAAeC,GAAf,CAAmB,CAAC;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,IAAR;AAAcC,QAAAA;AAAd,OAAD,KACnB;AAAQ,QAAA,GAAG,EAAEF,IAAb;AAAmB,QAAA,KAAK,EAAEA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEE,KADF,OACUD,IADV,CADA,CALF,CADD,EAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAuB,KAAKlB,KAAL,CAAWC,OAAlC,CAZD,CADD;AAgBA,KApBF,CADD;AAwBA;;AAnC0C;;AAsC5C,eAAeH,aAAf","sourcesContent":["import React from \"react\"\nimport { Query } from \"react-apollo\"\nimport { gql } from \"apollo-boost\"\n\nconst GET_COUNTRIES = gql`\n {\n  country{\n    name\n    native\n    emoji\n    currency\n    languages {\n      code\n      name\n    }\n  }\n}\n`;\n\nclass CountrySelect extends React.Component {\n\tstate = {\n\t\tcountry: \"PL\"\n\t}\n\n\t// set the selected country to the new input value\n\tonCountryChange = event => {\n\t\tthis.setState({ country: event.target.value })\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Query query={GET_COUNTRIES}>\n\t\t\t\t{({ loading, error, data }) => {\n\t\t\t\t\tif (loading) return <p>Loading...</p>\n\t\t\t\t\tif (error) return <p>{error.message}</p>\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\tvalue={this.state.country}\n\t\t\t\t\t\t\t\tonChange={this.onCountryChange}\n\t\t\t\t\t\t\t\tstyle={{ marginTop: \"30px\", height: \"50px\", fontSize: \"20px\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{data.countries.map(({ code, name, emoji }) => (\n\t\t\t\t\t\t\t\t\t<option key={code} value={code}>\n\t\t\t\t\t\t\t\t\t\t{emoji} {name}\n\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t<h3>Country Selected: {this.state.country}</h3>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Query>\n\t\t)\n\t}\n}\n\nexport default CountrySelect"]},"metadata":{},"sourceType":"module"}